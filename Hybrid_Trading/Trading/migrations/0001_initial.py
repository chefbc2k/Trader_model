# Generated by Django 5.1.1 on 2024-09-14 20:01

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BenchmarkData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('benchmark_name', models.CharField(max_length=50)),
                ('benchmark_returns', models.JSONField()),
                ('calculated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'benchmark_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('side', models.CharField(blank=True, max_length=10, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'order_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PendingOrders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('side', models.CharField(blank=True, max_length=10, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pending_orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sharpe_ratio', models.FloatField(blank=True, null=True)),
                ('sortino_ratio', models.FloatField(blank=True, null=True)),
                ('max_drawdown', models.FloatField(blank=True, null=True)),
                ('volatility', models.FloatField(blank=True, null=True)),
                ('annualized_return', models.FloatField(blank=True, null=True)),
                ('alpha', models.FloatField(blank=True, null=True)),
                ('beta', models.FloatField(blank=True, null=True)),
                ('sentiment_score', models.FloatField(blank=True, null=True)),
                ('weighted_sentiment', models.FloatField(blank=True, null=True)),
                ('analyst_score', models.FloatField(blank=True, null=True)),
                ('dynamic_decision', models.CharField(blank=True, max_length=50, null=True)),
                ('prediction_decision', models.CharField(blank=True, max_length=50, null=True)),
                ('calculated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'performance_metrics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PortfolioManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_size', models.IntegerField(blank=True, null=True)),
                ('entry_price', models.FloatField(blank=True, null=True)),
                ('side', models.CharField(blank=True, max_length=10, null=True)),
                ('current_value', models.FloatField(blank=True, null=True)),
                ('profit_loss', models.FloatField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'portfolio_manager',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RawTradeData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_results', models.JSONField()),
                ('dynamic_decision', models.JSONField(blank=True, null=True)),
                ('prediction_decision', models.JSONField(blank=True, null=True)),
                ('sentiment_score', models.FloatField(blank=True, null=True)),
                ('weighted_sentiment', models.FloatField(blank=True, null=True)),
                ('analyst_score', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'raw_trade_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SignalAggregates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aggregated_signals', models.JSONField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'signal_aggregates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Signals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('dynamic_decision', models.JSONField(blank=True, null=True)),
                ('prediction_decision', models.JSONField(blank=True, null=True)),
                ('final_signal', models.CharField(blank=True, max_length=50, null=True)),
                ('action', models.CharField(blank=True, max_length=10, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'signals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StrategySignals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strategy_name', models.CharField(max_length=50)),
                ('signal', models.JSONField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'strategy_signals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TradeLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=10)),
                ('quantity', models.IntegerField()),
                ('price', models.FloatField()),
                ('date', models.DateTimeField()),
                ('portfolio_value', models.FloatField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'trade_logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TradeResults',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dynamic_decision', models.JSONField(blank=True, null=True)),
                ('prediction_decision', models.JSONField(blank=True, null=True)),
                ('instant_backtest_signals', models.JSONField(blank=True, null=True)),
                ('mrms_decision', models.JSONField(blank=True, null=True)),
                ('vrs_decision', models.JSONField(blank=True, null=True)),
                ('sentiment_score', models.FloatField(blank=True, null=True)),
                ('technical_indicator_final_signal', models.CharField(blank=True, max_length=50, null=True)),
                ('insight_final_signal', models.CharField(blank=True, max_length=50, null=True)),
                ('news_final_signal', models.CharField(blank=True, max_length=50, null=True)),
                ('prophet_forecast_signal', models.CharField(blank=True, max_length=50, null=True)),
                ('final_action', models.CharField(blank=True, max_length=50, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('current_price', models.FloatField(blank=True, null=True)),
                ('order_status', models.CharField(blank=True, max_length=50, null=True)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'trade_results',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TradingSignals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dynamic_signals', models.JSONField(blank=True, null=True)),
                ('prediction_signals', models.JSONField(blank=True, null=True)),
                ('mrms_signals', models.JSONField(blank=True, null=True)),
                ('vrs_signals', models.JSONField(blank=True, null=True)),
                ('trading_signals', models.JSONField(blank=True, null=True)),
                ('value_seeker_signals', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'trading_signals',
                'managed': False,
            },
        ),
    ]
