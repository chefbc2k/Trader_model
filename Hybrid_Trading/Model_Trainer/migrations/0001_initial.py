# Generated by Django 5.1.1 on 2024-09-14 20:27

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ModelTraining',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_type', models.CharField(max_length=50)),
                ('hyperparameters', models.JSONField()),
                ('optimization_method', models.CharField(max_length=50)),
                ('best_hyperparameters', models.JSONField()),
                ('training_duration', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Ticker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticker', models.CharField(max_length=10, unique=True)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('sector', models.CharField(blank=True, max_length=50, null=True)),
                ('industry', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='UserInput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_type', models.CharField(max_length=50)),
                ('feature_selection_method', models.CharField(max_length=50)),
                ('optimization_method', models.CharField(max_length=50)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('batch_size', models.IntegerField()),
                ('train_test_split_ratio', models.FloatField()),
                ('target_column', models.CharField(max_length=50)),
                ('other_args', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='ModelEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mae', models.FloatField()),
                ('rmse', models.FloatField()),
                ('mape', models.FloatField()),
                ('r2', models.FloatField()),
                ('evaluation_set', models.CharField(max_length=50)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('model_training', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model_trainer_app.modeltraining')),
            ],
        ),
        migrations.CreateModel(
            name='PerformanceAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_date', models.DateTimeField()),
                ('mape_threshold', models.FloatField()),
                ('rmse_threshold', models.FloatField()),
                ('mae_threshold', models.FloatField()),
                ('r2_threshold', models.FloatField()),
                ('alert_triggered', models.BooleanField()),
                ('retraining_status', models.BooleanField()),
                ('model_training', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model_trainer_app.modeltraining')),
            ],
        ),
        migrations.CreateModel(
            name='SelfTeachingUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_date', models.DateTimeField()),
                ('performance_metric_before', models.FloatField()),
                ('performance_metric_after', models.FloatField()),
                ('reason_for_update', models.CharField(max_length=255)),
                ('model_training', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model_trainer_app.modeltraining')),
            ],
        ),
        migrations.CreateModel(
            name='ModelPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction_date', models.DateTimeField()),
                ('prediction_value', models.FloatField()),
                ('actual_value', models.FloatField()),
                ('trade_signal', models.CharField(max_length=10)),
                ('model_training', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model_trainer_app.modeltraining')),
                ('ticker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model_trainer_app.ticker')),
            ],
        ),
        migrations.CreateModel(
            name='TradeSignal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signal_date', models.DateTimeField()),
                ('signal', models.CharField(max_length=10)),
                ('ticker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model_trainer_app.ticker')),
                ('user_input', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model_trainer_app.userinput')),
            ],
        ),
        migrations.CreateModel(
            name='PreprocessedData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_engineering_output', models.JSONField()),
                ('feature_selection_output', models.JSONField()),
                ('ticker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model_trainer_app.ticker')),
                ('user_input', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model_trainer_app.userinput')),
            ],
        ),
        migrations.CreateModel(
            name='PipelineExecutionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('execution_start_time', models.DateTimeField()),
                ('execution_end_time', models.DateTimeField()),
                ('execution_status', models.CharField(max_length=50)),
                ('log_message', models.TextField()),
                ('ticker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model_trainer_app.ticker')),
                ('user_input', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model_trainer_app.userinput')),
            ],
        ),
        migrations.AddField(
            model_name='modeltraining',
            name='user_input',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model_trainer_app.userinput'),
        ),
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_source_type', models.CharField(max_length=50)),
                ('raw_data_url', models.TextField()),
                ('ticker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model_trainer_app.ticker')),
                ('user_input', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model_trainer_app.userinput')),
            ],
        ),
    ]
